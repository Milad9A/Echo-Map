# Uncomment this line to define a global platform for your project
platform :ios, '14.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Start of added configuration for fixing header issues
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
      
      # Fix for Xcode 15 and later - removes code signing issues
      config.build_settings['EXPANDED_CODE_SIGN_IDENTITY'] = ""
      config.build_settings['CODE_SIGNING_REQUIRED'] = "NO"
      config.build_settings['CODE_SIGNING_ALLOWED'] = "NO"
      
      # Fix for header search paths
      if target.name == 'Google-Maps-iOS-Utils'
        config.build_settings['HEADER_SEARCH_PATHS'] ||= '$(inherited) "${PODS_ROOT}/Headers/Private" "${PODS_ROOT}/Headers/Private/Google-Maps-iOS-Utils" "${PODS_ROOT}/Headers/Public" "${PODS_ROOT}/Headers/Public/Google-Maps-iOS-Utils" "${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Headers"'
      end
    end
    
    # Fix umbrella header imports if needed
    if target.name == 'Google-Maps-iOS-Utils'
      fix_umbrella_header(installer, target)
    end
  end
end

# Helper method to fix umbrella header imports
def fix_umbrella_header(installer, target)
  umbrella_header_path = "#{installer.sandbox.build_headers_dir.realdirpath}/Google-Maps-iOS-Utils/Google-Maps-iOS-Utils-umbrella.h"
  if File.exist?(umbrella_header_path)
    content = File.read(umbrella_header_path)
    fixed_content = content.gsub(/#import "(.+)"/, '#import <Google-Maps-iOS-Utils/\1>')
    File.write(umbrella_header_path, fixed_content)
  end
end
