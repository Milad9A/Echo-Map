# Uncomment this line to define a global platform for your project
platform :ios, '14.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Start of added configuration for fixing header issues
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
      
      # Fix for Xcode 15 and later - removes code signing issues
      config.build_settings['EXPANDED_CODE_SIGN_IDENTITY'] = ""
      config.build_settings['CODE_SIGNING_REQUIRED'] = "NO"
      config.build_settings['CODE_SIGNING_ALLOWED'] = "NO"
      
      # Enhanced header search paths for Google-Maps-iOS-Utils
      if target.name == 'Google-Maps-iOS-Utils'
        # More comprehensive header search paths
        config.build_settings['HEADER_SEARCH_PATHS'] = [
          '$(inherited)',
          '"${PODS_ROOT}/Headers/Private"', 
          '"${PODS_ROOT}/Headers/Private/Google-Maps-iOS-Utils"',
          '"${PODS_ROOT}/Headers/Public"',
          '"${PODS_ROOT}/Headers/Public/Google-Maps-iOS-Utils"',
          '"${PODS_ROOT}/GoogleMaps/Maps/Frameworks/GoogleMaps.framework/Headers"',
          '"${PODS_TARGET_SRCROOT}/src/Clustering"',
          '"${PODS_TARGET_SRCROOT}/src/GeometryUtils"',
          '"${PODS_TARGET_SRCROOT}/src/Heatmap"',
          '"${PODS_TARGET_SRCROOT}/src/QuadTree"',
          '"${PODS_ROOT}/Target Support Files/Google-Maps-iOS-Utils"'  # Add this line to find the umbrella header
        ]
        
        # Ensure modulemap is properly configured
        config.build_settings['DEFINES_MODULE'] = 'YES'
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      end
    end
  end
  
  # Fix for umbrella header imports
  begin
    utils_target = installer.pods_project.targets.find { |t| t.name == 'Google-Maps-iOS-Utils' }
    if utils_target
      # Try to find the umbrella header in the standard location
      Dir.glob(File.join(installer.sandbox.root, "Target Support Files", "Google-Maps-iOS-Utils", "*umbrella.h")).each do |umbrella_path|
        content = File.read(umbrella_path)
        fixed_content = content.gsub(/#import <Google-Maps-iOS-Utils\/(.+)>/, '#import "\1"')
        File.write(umbrella_path, fixed_content)
        puts "Fixed umbrella imports in #{umbrella_path}"
      end
      
      # Additional fix for module map
      module_map_path = File.join(installer.sandbox.root, "Target Support Files", "Google-Maps-iOS-Utils", "Google-Maps-iOS-Utils.modulemap")
      if File.exist?(module_map_path)
        content = File.read(module_map_path)
        fixed_content = content.gsub(/umbrella header "<Google-Maps-iOS-Utils\/(.+)>"/, 'umbrella header "\1"')
        File.write(module_map_path, fixed_content)
        puts "Fixed module map in #{module_map_path}"
      end
    end
  rescue => e
    # Don't let header fixes break the build
    puts "Warning: Error fixing umbrella headers: #{e.message}"
  end
end
